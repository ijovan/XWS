
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package centralnabanka;

import java.math.BigDecimal;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;

import xml.mt102.Placanje;
import xml.mt102.TMT102;
import xml.mt900.TMT900;
import xml.mt910.TMT910;
import banka.BankaPort;

/**
 * This class was generated by Apache CXF 2.6.5
 * 2015-06-20T22:48:17.495+02:00
 * Generated source version: 2.6.5
 * 
 */

@javax.jws.WebService(
                      serviceName = "centralnaBankaService",
                      portName = "centralnaBankaPort",
                      targetNamespace = "http://centralnabanka",
                      wsdlLocation = "WEB-INF/wsdl/centralna_banka.wsdl",
                      endpointInterface = "centralnabanka.CentralnaBankaPort")
                      
public class CentralnaBankaPortImpl implements CentralnaBankaPort {

    private static final Logger LOG = Logger.getLogger(CentralnaBankaPortImpl.class.getName());

    private static HashMap<String, Banka> racuniBanaka = new HashMap<String, Banka>();
	private static QName serviceName = new QName("http://banka", "bankaService");
	private static QName portName = new QName("http://banka", "bankaPort");
	private static ArrayList<TMT102> mt102s = new ArrayList<TMT102>();
    
	private static void init() {
		racuniBanaka.put("000000000000000000", new Banka("AAAAAAAA", "000000000000000000", new BigDecimal(10000000)));
		racuniBanaka.put("000000000000000001", new Banka("BBBBBBBB", "000000000000000001", new BigDecimal(10000000)));
	}
	
	public static void main(String[] args) {
		for (TMT102 mt102 : mt102s) {
			BigDecimal suma = new BigDecimal("0");
			for (Placanje p : mt102.getPlacanja()) {
				suma = suma.add(p.getIznos());
			}
	        String racunBankeDuznika = mt102.getObrRacunBankeDuznika();
	        String racunBankePoverioca = mt102.getObrRacunBankePoverioca();
	        BigDecimal iznos = suma;
	        Banka bankaDuznika = racuniBanaka.get(racunBankeDuznika);
	        Banka bankaPoverioca = racuniBanaka.get(racunBankePoverioca);
	        if (bankaDuznika != null && bankaPoverioca != null &&
	        		bankaDuznika.getStanje().compareTo(iznos) >= 0 ) {
	        	System.out.println("Centralna banka: zahtev MT102 OK.");
	        	BigDecimal duznikStanje = bankaDuznika.getStanje();
	        	BigDecimal poverilacStanje = bankaPoverioca.getStanje();
	        	bankaDuznika.setStanje(duznikStanje.subtract(iznos));
	        	bankaPoverioca.setStanje(poverilacStanje.add(iznos));
	        	
				try {
					BankaPort portBankeDuznika = constructPort(bankaDuznika.getSwift());
					BankaPort portBankePoverioca = constructPort(bankaPoverioca.getSwift());
					
					TMT900 mt900 = new TMT900();
					mt900.setID("");/////
					mt900.setSWIFTDuznika(bankaDuznika.getSwift());
					mt900.setObrRacunBankeDuznika(bankaDuznika.getObracunskiRacun());
					mt900.setIDNalogPoruka(mt102.getID());
					mt900.setDatumValute(mt102.getDatumValute());
					mt900.setIznos(suma);
					mt900.setSifraValute(mt102.getSifraValute());
					portBankeDuznika.mt900(mt900);
					
					TMT910 mt910 = new TMT910();
					mt910.setID("");/////
					mt910.setSWIFTPoverioca(bankaPoverioca.getSwift());
					mt910.setObrRacunBankePoverioca(bankaPoverioca.getObracunskiRacun());
					mt910.setID(mt102.getID());
					mt910.setDatumValute(mt102.getDatumValute());
					mt910.setIznos(suma);
					mt910.setSifraValute(mt102.getSifraValute());
					portBankePoverioca.mt910(mt910);
					
					portBankePoverioca.mt102(mt102);
				} catch (MalformedURLException e) {
					e.printStackTrace();
				}			
	        }
		}
	}
	
    /* (non-Javadoc)
     * @see centralnabanka.CentralnaBankaPort#mt103(xml.mt103.TMT103  parameters )*
     */
    public boolean mt103(xml.mt103.TMT103 parameters) { 
        LOG.info("Executing operation mt103");
        System.out.println(parameters);
//        try {
//            boolean _return = false;
//            return _return;
//        } catch (java.lang.Exception ex) {
//            ex.printStackTrace();
//            throw new RuntimeException(ex);
//        }
        
        init();
        
        String racunBankeDuznika = parameters.getObrRacunBankeDuznika();
        String racunBankePoverioca = parameters.getObrRacunBankePoverioca();
        BigDecimal iznos = parameters.getIznos();
        Banka bankaDuznika = racuniBanaka.get(racunBankeDuznika);
        Banka bankaPoverioca = racuniBanaka.get(racunBankePoverioca);
        if (bankaDuznika != null && bankaPoverioca != null &&
        		bankaDuznika.getStanje().compareTo(iznos) >= 0 ) {
        	System.out.println("Centralna banka: zahtev MT103 OK.");
        	BigDecimal duznikStanje = bankaDuznika.getStanje();
        	BigDecimal poverilacStanje = bankaPoverioca.getStanje();
        	bankaDuznika.setStanje(duznikStanje.subtract(iznos));
        	bankaPoverioca.setStanje(poverilacStanje.add(iznos));
        	
			try {
				BankaPort portBankeDuznika = constructPort(bankaDuznika.getSwift());
				BankaPort portBankePoverioca = constructPort(bankaPoverioca.getSwift());
				
				TMT900 mt900 = new TMT900();
				mt900.setID("");/////
				mt900.setSWIFTDuznika(bankaDuznika.getSwift());
				mt900.setObrRacunBankeDuznika(bankaDuznika.getObracunskiRacun());
				mt900.setIDNalogPoruka(parameters.getID());
				mt900.setDatumValute(parameters.getDatumValute());
				mt900.setIznos(parameters.getIznos());
				mt900.setSifraValute(parameters.getSifraValute());
				portBankeDuznika.mt900(mt900);
				
				TMT910 mt910 = new TMT910();
				mt910.setID("");/////
				mt910.setSWIFTPoverioca(bankaPoverioca.getSwift());
				mt910.setObrRacunBankePoverioca(bankaPoverioca.getObracunskiRacun());
				mt910.setID(parameters.getID());
				mt910.setDatumValute(parameters.getDatumValute());
				mt910.setIznos(parameters.getIznos());
				mt910.setSifraValute(parameters.getSifraValute());
				portBankePoverioca.mt910(mt910);
				
				portBankePoverioca.mt103(parameters);
			} catch (MalformedURLException e) {
				return false;
			}			
        	return true;
        } else {
        	return false;
        }
    }

    //TODO: u swift ide ime projekta banke.
    private static BankaPort constructPort(String swift) throws MalformedURLException {
    	swift = "banka";
		URL wsdlLocation = new URL("http://localhost:8080/" + swift.toLowerCase() + "/services/Banka?wsdl");
		Service service = Service.create(wsdlLocation, serviceName);
		return service.getPort(portName, BankaPort.class); 
    }
    
    /* (non-Javadoc)
     * @see centralnabanka.CentralnaBankaPort#mt102(xml.mt102.TMT102  parameters )*
     */
    public boolean mt102(xml.mt102.TMT102 parameters) { 
        LOG.info("Executing operation mt102");
        System.out.println(parameters);
//        try {
//            boolean _return = false;
//            return _return;
//        } catch (java.lang.Exception ex) {
//            ex.printStackTrace();
//            throw new RuntimeException(ex);
//        }
        mt102s.add(parameters);
        return true;
    }

}
